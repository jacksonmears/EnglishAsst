USE basketball_data;

WITH CombinedData AS (
    SELECT
        p.game_id,
        p.date,
        p.pred_winner,
        p.h_moneyline,
        p.a_moneyline,
        p.probability_win / 100.0 AS probability_win, -- Convert integer to decimal probability
        o.h_team,
        o.a_team,
        o.h_score,
        o.a_score,
        CASE
            WHEN CAST(o.h_score AS FLOAT) > CAST(o.a_score AS FLOAT) THEN o.h_team
            WHEN CAST(o.a_score AS FLOAT) > CAST(o.h_score AS FLOAT) THEN o.a_team
        END AS actual_winner
    FROM
        dbo.predictions2425 p
    INNER JOIN
        dbo.outcomes2425 o
    ON
        p.game_id = o.game_id
    WHERE 
        o.h_score > 0 AND p.h_moneyline IS NOT NULL
),
KellyBet AS (
    SELECT
        game_id,
        date,
        pred_winner,
        actual_winner,
        h_team,
        a_team,
        h_moneyline,
        a_moneyline,
        probability_win,
        -- Determine the odds in decimal form based on American odds
        CASE
            WHEN pred_winner = h_team AND h_moneyline > 0 THEN CAST(h_moneyline AS FLOAT) / 100.0 -- Underdog
            WHEN pred_winner = h_team AND h_moneyline < 0 THEN 100.0 / ABS(CAST(h_moneyline AS FLOAT)) -- Favorite
            WHEN pred_winner = a_team AND a_moneyline > 0 THEN CAST(a_moneyline AS FLOAT) / 100.0 -- Underdog
            WHEN pred_winner = a_team AND a_moneyline < 0 THEN 100.0 / ABS(CAST(a_moneyline AS FLOAT)) -- Favorite
        END AS decimal_odds,
        -- Calculate the Kelly Criterion bet size
        ROUND(
            25.0 * 
            CASE
                WHEN pred_winner = h_team THEN 
                    (probability_win - (1 - probability_win) / (100.0 / ABS(CAST(h_moneyline AS FLOAT))))
                WHEN pred_winner = a_team THEN
                    (probability_win - (1 - probability_win) / (100.0 / ABS(CAST(a_moneyline AS FLOAT))))
                ELSE 0
            END, 2
        ) AS kelly_bet
    FROM
        CombinedData
    WHERE 
        (probability_win - (1 - probability_win) / (100.0 / ABS(CAST(h_moneyline AS FLOAT)))) > 0 -- Exclude negative Kelly values
),
AdjustedBankroll AS (
    SELECT
        game_id,
        date,
        pred_winner,
        actual_winner,
        decimal_odds,
        probability_win,
        kelly_bet,
        -- Calculate the change in bankroll for each game
        ROUND(
            CASE
                WHEN pred_winner = actual_winner THEN kelly_bet * decimal_odds -- Winning bet
                ELSE -kelly_bet -- Losing bet
            END, 2
        ) AS bankroll_change
    FROM
        KellyBet

	where kelly_bet > 0
),
FinalBankroll AS (
    SELECT
        game_id,
        date,
        pred_winner,
        actual_winner,
        decimal_odds,
        probability_win,
        kelly_bet,
        bankroll_change,
        -- Calculate the running bankroll
        25.0 + SUM(bankroll_change) OVER (ORDER BY date, game_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS running_bankroll
    FROM
        AdjustedBankroll
)
SELECT
    game_id,
    date,
    pred_winner,
    actual_winner,
    decimal_odds,
    probability_win,
    kelly_bet,
    bankroll_change,
    running_bankroll
FROM
    FinalBankroll
ORDER BY
    date, game_id;
